AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Lambda application that calls the Flyway api
Resources:
  vpc:
    Type: AWS::EC2::VPC
    Properties:
      CiderBlock: 10.0.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: false
      Tags:
        - Key: Name
          Value: AWS-Flayway-Lambda-VPC
  publicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref vpc
      AvailabilityZone: !Select [0, !GetAZs]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AWS-Flayway-Lambda-public-subnet1
  publicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref vpc
      AvailabilityZone: !Select [1, !GetAZs]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AWS-Flayway-Lambda-public-subnet2
  privateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref vpc
      AvailabilityZone: !Select [0, !GetAZs]
      Tags:
        - Key: Name
          Value: AWS-Flayway-Lambda-private-subnet1
  privateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref vpc
      AvailabilityZone: !Select [1, !GetAZs]
      Tags:
        - Key: Name
          Value: AWS-Flayway-Lambda-private-subnet2
  # Internet Gateway
  vpcigw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AWS-Flayway-Lambda-igw
  # attach Internet Gateway to VPC
  vpcigwattach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref vpcigw
      VpcId: !Ref vpc
  # route table
  publicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc
      Tags:
        - Key: Name
          Value: AWS-Flayway-Lambda-public-route-table
  # routing定義
  publicRoute:
    Type: AWS::EC2::Route
    DependsOn: vpcigw
    Properties:
      RouteTableId: !Ref publicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref vpcigw
  # route tableのアサイン
  publicSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet1
      RouteTableId: !Ref publicRouteTable

  publicSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet2
      RouteTableId: !Ref publicRouteTable

  bucket01:
    Type: AWS::S3::Bucket
    # アプリ用のS3 Bucket
    Properties:
      BucketName: "miyohideawsflywaybucket01"
  function:
    Type: AWS::Serverless::Function
    # 関数の定義
    Properties:
      CodeUri: build/distributions/aws_flyway_lambda-thin-1.0.zip
      Handler: com.github.miyohide.aws_flyway_lambda.MyLambda::handleRequest
      Runtime: java17
      Description: Java function
      MemorySize: 1024
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3ReadOnlyAccess
      Tracing: Active
      Layers:
        - !Ref libs
  # Layerの定義
  libs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: flyway-java-lib
      Description: Dependencies for the flyway java app.
      ContentUri: build/distributions/aws_flyway_lambda-libs-1.0.zip
      CompatibleRuntimes:
        - java17
